<Project>
	<PropertyGroup Condition="'$(TargetFramework)' == 'net20' Or $(TargetFrameworks.Contains('net20')) Or '$(TargetFrameworkVersion)' != ''">
		<_GplexTool>"$(MSBuildThisFileDirectory)net20/Gplex.exe"</_GplexTool>
	</PropertyGroup>
	<PropertyGroup Condition="'$(TargetFramework)' == 'netcoreapp2.2' Or $(TargetFrameworks.Contains('netcoreapp2.2'))">
		<_GplexTool>dotnet "$(MSBuildThisFileDirectory)netcoreapp2.2/Gplex.dll"</_GplexTool>
	</PropertyGroup>
	<PropertyGroup Condition="'$(TargetFramework)' == 'netcoreapp3.1' Or $(TargetFrameworks.Contains('netcoreapp3.1'))">
		<_GplexTool>dotnet "$(MSBuildThisFileDirectory)netcoreapp3.1/Gplex.dll"</_GplexTool>
	</PropertyGroup>
	<PropertyGroup Condition="'$(TargetFramework)' == 'net5.0' Or $(TargetFrameworks.Contains('net5.0'))">
		<_GplexTool>dotnet "$(MSBuildThisFileDirectory)net5.0/Gplex.dll"</_GplexTool>
	</PropertyGroup>
	<PropertyGroup Condition="'$(TargetFramework)' == 'net6.0' Or $(TargetFrameworks.Contains('net6.0'))">
		<_GplexTool>dotnet "$(MSBuildThisFileDirectory)net6.0/Gplex.dll"</_GplexTool>
	</PropertyGroup>
	<PropertyGroup Condition="'$(_GplexTool)' == ''">
		<_GplexTool>dotnet "$(MSBuildThisFileDirectory)net6.0/Gplex.dll"</_GplexTool>
	</PropertyGroup>

	<!-- Defaults for LexFile items -->
	<ItemDefinitionGroup>
		<LexFile>
			<OutputFile>%(Identity).cs</OutputFile>
			<Arguments></Arguments>
		</LexFile>
	</ItemDefinitionGroup>

	<!-- Run once from outer build in cross targeting projects. Imported and called from crossTargetingBuild/*.targets -->
	<Target Name="YaccLexToolsGplexCrossTarget" BeforeTargets="DispatchToInnerBuilds" Condition="'$(IsCrossTargetingBuild)' != ''" Inputs="@(LexFile)" Outputs="@(LexFile->'%(OutputFile)')">
		<CallTarget Targets="YaccLexToolsGplex" />
	</Target>

	<!-- Run once in single targeting projects. Imported and called from build/[framework]/*.targets -->
	<!-- Don't run in VS design time builds. Otherwise VS compiles eagerly and discards the output -->
	<Target Name="YaccLexToolsGplexSingleTarget" BeforeTargets="CoreCompile" Condition="'$(DesignTimeBuild)' == '' AND '$(IsCrossTargetingBuild)' == ''" Inputs="@(LexFile)" Outputs="@(LexFile->'%(OutputFile)')">
		<CallTarget Targets="YaccLexToolsGplex" />
	</Target>

	<Target Name="YaccLexToolsGplex" >
		<Exec Command="$(_GplexTool) %(LexFile.Arguments) /out:&quot;./%(LexFile.OutputFile)&quot; %(LexFile.Identity)" />

		<!-- Ensure the generated files are included in the build. Otherwise first build fails because the source files are collected already -->
		<ItemGroup>
			<Compile Remove="@(LexFile->'%(OutputFile)')" />
			<Compile Remove="GplexBuffers.cs" />
			<Compile Include="@(LexFile->'%(OutputFile)')" />
			<Compile Include="GplexBuffers.cs" />
		</ItemGroup>
	</Target>

	<!-- Make it work with VS' FastUpToDateCheck -->
	<ItemGroup>
		<UpToDateCheckInput Include="@(LexFile)" />
	</ItemGroup>

</Project>
